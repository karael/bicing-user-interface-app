// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`application/state/query/stations/operations should handle error when api call response does not contains expected schema type 1`] = `
Object {
  "call": Array [
    Object {
      "@@redux-saga/IO": true,
      "CALL": Object {
        "args": Array [
          Object {
            "latitude": 41.3244,
            "limit": 5000,
            "longitude": 2.345,
          },
        ],
        "context": null,
        "fn": "@@redux-saga-test-plan/json/function/find",
      },
    },
  ],
  "put": Array [
    Object {
      "@@redux-saga/IO": true,
      "PUT": Object {
        "action": Object {
          "error": false,
          "meta": Object {
            "isFetching": true,
          },
          "type": "query/stations/FETCH_PENDING",
        },
        "channel": null,
      },
    },
    Object {
      "@@redux-saga/IO": true,
      "PUT": Object {
        "action": Object {
          "error": true,
          "meta": Object {
            "isFetching": false,
          },
          "payload": Object {
            "_object": Array [
              Object {
                "name": "233 - C/NOU DE LA RAMBLA, 164",
              },
            ],
            "annotate": "@@redux-saga-test-plan/json/function/<anonymous>",
            "details": Array [
              Object {
                "context": Object {
                  "key": "id",
                  "label": "id",
                },
                "message": "\\"id\\" is required",
                "path": Array [
                  0,
                  "id",
                ],
                "type": "any.required",
              },
            ],
            "isJoi": true,
            "name": "ValidationError",
          },
          "type": "query/stations/FETCH_FAILURE",
        },
        "channel": null,
      },
    },
  ],
}
`;

exports[`application/state/query/stations/operations should handle error when byGeoLocationFilter creation is not validated 1`] = `
Object {
  "put": Array [
    Object {
      "@@redux-saga/IO": true,
      "PUT": Object {
        "action": Object {
          "error": false,
          "meta": Object {
            "isFetching": true,
          },
          "type": "query/stations/FETCH_PENDING",
        },
        "channel": null,
      },
    },
    Object {
      "@@redux-saga/IO": true,
      "PUT": Object {
        "action": Object {
          "error": true,
          "meta": Object {
            "isFetching": false,
          },
          "payload": Object {
            "_object": Object {
              "latitude": "bad_value",
              "limit": "bad_value",
              "longitude": "bad_value",
            },
            "annotate": "@@redux-saga-test-plan/json/function/<anonymous>",
            "details": Array [
              Object {
                "context": Object {
                  "key": "latitude",
                  "label": "latitude",
                  "value": "bad_value",
                },
                "message": "\\"latitude\\" must be a number",
                "path": Array [
                  "latitude",
                ],
                "type": "number.base",
              },
            ],
            "isJoi": true,
            "name": "ValidationError",
          },
          "type": "query/stations/FETCH_FAILURE",
        },
        "channel": null,
      },
    },
  ],
}
`;
